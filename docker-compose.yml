
services:
    api: 
        build:
            context: ./backend
        container_name: api
        volumes:
            - ./backend:/backend
        env_file:
            - .env
        ports:
            - '8000:8000'
        command: sh run.sh
        depends_on:
            - database
            - redis
        networks:
            - service-network
    
    database: 
        image: postgres:14.6-alpine
        container_name: postgres_database
        env_file:
            - .env
        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        ports:
            - '5432:5432'
        networks:
            - service-network

    redis:
        image: redis:6.2
        container_name: redis
        build: 
            context: ./backend
        restart: always
        ports:
            - "6379:6379"
        networks:
            - service-network

    celery:
        build:
            context: ./backend
        container_name: celery_worker
        restart: always
        env_file:
            - .env
        command: celery -A config worker --loglevel=info
        depends_on:
            - redis
            - database
            - api
        volumes:
            - ./backend:/backend
        networks:
            - service-network

    celery_beat:
        build:
            context: ./backend
        container_name: celery_beat
        restart: always
        env_file:
            - .env
        command: celery -A config beat --loglevel=info
        depends_on:
            - redis
            - database
            - api
        volumes:
            - ./backend:/backend
        networks:
            - service-network

    nginx:
        restart: always
        container_name: nginx
        depends_on:
            - api
        build:
            context: ./nginx
            dockerfile: Dockerfile
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports:
            - "8080:80"
        networks:
            - service-network

networks:
    service-network: 
        driver: bridge
    

    
