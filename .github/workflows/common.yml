name: Django CI & Postgres Test
on:
  push:
  pull_request:

jobs:
  django_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: ${{ vars.DEBUG }}
        DB_HOST: ${{ vars.DB_HOST }}
        DB_NAME: ${{ vars.DB_NAME }}
        DB_USER: ${{ vars.DB_USER }}
        DB_PASS: ${{ vars.DB_PASS }}
        EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
        EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
        EMAIL_HOST: ${{ vars.EMAIL_HOST }}
        DB_PORT: 5432
    services:
      postgres_main:
        image: postgres
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASS }}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v3
        with:
          python-version: 3.12
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements.txt
      - name: Linters 
        run: |
          flake8 --config .flake8 ./backend
      - name: Start Redis
        uses: supercharge/redis-github-action@1.7.0
        with:
          redis-version: 7
      - name: Start Celery_worker
        run: |
          celery -A config worker --loglevel=info
      - name: Start Celery_worker
        run: |
          celery -A config beat --loglevel=info       
      - name: RUN DRF TEST
        run: |
          cd ./backend
          python manage.py test apps/topic